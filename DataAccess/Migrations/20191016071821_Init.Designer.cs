// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(RepositoryPatternDbContext))]
    [Migration("20191016071821_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new { Id = 1, Name = "Iborn" },
                        new { Id = 2, Name = "Grizli" }
                    );
                });

            modelBuilder.Entity("DomainModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<int>("CompanyId");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new { Id = 1, City = "Skopje", CompanyId = 1, Country = "Macedonia", Email = "martinp@iborn.net", FirstName = "Martin", LastName = "Panovski" },
                        new { Id = 2, City = "Skopje", CompanyId = 2, Country = "Macedonia", Email = "petrep@iborn.net", FirstName = "Petre", LastName = "Petrevski" },
                        new { Id = 3, City = "Ohrid", CompanyId = 1, Country = "Macedonia", Email = "martinp@iborn.net", FirstName = "Mite", LastName = "Mitevski" },
                        new { Id = 4, City = "Strumica", CompanyId = 1, Country = "Macedonia", Email = "jovanj@iborn.net", FirstName = "Jovan", LastName = "Jovanovski" }
                    );
                });

            modelBuilder.Entity("DomainModels.Employee", b =>
                {
                    b.HasOne("DomainModels.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
